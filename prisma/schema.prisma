generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model organizations {
  org_id     String    @id
  name       String
  CIF        String?
  telf_org   String?
  address    String?
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  cif        String?
  phone      String?
  persons    persons[]
}

model persons {
  person_id     String         @id
  person_org_id String?
  first_name    String?
  last_name     String?
  email         String?
  phone         String?
  created_at    DateTime       @default(now())
  updated_at    DateTime       @default(now()) @updatedAt
  org_id        String?
  organizations organizations? @relation(fields: [person_org_id], references: [org_id])

  @@index([person_org_id])
}

model deals {
  deal_id          String     @id
  alumnos          Int?       @default(0)
  created_at       DateTime   @default(now())
  updated_at       DateTime   @default(now()) @updatedAt
  title            String?
  org_id           BigInt?
  pipeline_id      String?
  training_address String?
  sede_label       String?
  caes_label       String?
  fundae_label     String?
  hotel_label      String?
  person_id        String?
  extras           Json       @default("[]") @db.Json
  prodextra        Json       @default("[]") @db.Json
  hours            String?
  comments         comments[]
  seassons         seassons[]
}

model comments {
  comment_id  String   @id
  deal_id     String
  author_id   String
  author_name String?
  content     String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  deal        deals    @relation(fields: [deal_id], references: [deal_id], onDelete: Cascade)

  @@index([author_id])
  @@index([deal_id])
}

model deal_products {
  id          String           @id
  deal_id     String?
  product_id  String?
  name        String?
  code        String?
  quantity    Decimal?         @db.Decimal
  price       Decimal?         @db.Decimal
  is_training Boolean?
  created_at  DateTime         @default(now()) @db.Timestamptz(6)
  updated_at  DateTime         @default(now()) @db.Timestamptz(6)
  type        dealproducttype?

  @@index([deal_id])
  @@index([type])
}

model deal_files {
  id         String    @id
  deal_id    String?
  product_id String?
  file_name  String?
  file_url   String?
  file_type  String?
  added_at   DateTime? @db.Timestamptz(6)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
}

model deal_notes {
  id         String    @id
  deal_id    String?
  product_id String?
  content    String?
  author     String?
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
}

model seassons {
  seasson_id      String    @id
  deal_id         String
  status          String?
  date_start      DateTime?
  date_end        DateTime?
  sede            String?
  seasson_address String?
  seasson_fireman String?
  seasson_vehicle String?
  comment_seasson String?
  deals           deals     @relation(fields: [deal_id], references: [deal_id], onDelete: Cascade)

  @@index([deal_id])
}

model trainers {
  trainer_id String   @id
  name       String
  email      String?
  phone      String?
  created_at DateTime @default(now())
  updated_at DateTime
}

model unidades_moviles {
  unidad_id       String   @id
  name            String?
  plate           String?
  capacity_liters Int?
  created_at      DateTime @default(now())
  updated_at      DateTime
}

enum DocumentOrigin {
  imported
  user_upload
}

enum dealproducttype {
  TRAINING
  EXTRA
}
